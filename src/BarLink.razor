@using Microsoft.AspNetCore.Components.Routing
@inherits Soenneker.Quark.Components.Element

@if (!string.IsNullOrEmpty(Href))
{
    <NavLink href="@Href" @attributes="BuildAttributes()">
        @ChildContent
    </NavLink>
}
else
{
    <a @attributes="BuildAttributes()">
        @ChildContent
    </a>
}

@code {
    [Parameter]
    public string? Href { get; set; }

    [Parameter]
    public bool Active { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    protected override Dictionary<string, object> BuildAttributes()
    {
        Dictionary<string, object> attributes = base.BuildAttributes();

        var baseClass = "nav-link";
        if (Active)
            baseClass = $"{baseClass} active";
        if (Disabled)
            baseClass = $"{baseClass} disabled";

        attributes["class"] = AppendToClass(attributes.GetValueOrDefault("class")
            ?.ToString(), baseClass);

        if (Disabled)
            attributes["aria-disabled"] = "true";

        return attributes;
    }
}
