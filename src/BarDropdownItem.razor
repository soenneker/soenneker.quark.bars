@using Microsoft.AspNetCore.Components.Web
@using Soenneker.Blazor.Extensions.EventCallback

@inherits Soenneker.Quark.Element

<Anchor To="@To" @attributes="BuildAttributes()" OnClick="HandleItemClick">
    @ChildContent
</Anchor>

@code {
	public override string? Name { get; set; } = "BarDropdownItem";

    [Parameter]
    public string? To { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> Clicked { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public double Indentation { get; set; } = 1.5d;

    protected override Dictionary<string, object> BuildAttributes()
    {
        Dictionary<string, object> attributes = base.BuildAttributes();

        var baseClass = "dropdown-item";
        
        if (Disabled)
            baseClass = $"{baseClass} disabled";

        AppendToClassAttr(attributes, baseClass);

        if (Disabled)
            attributes["aria-disabled"] = "true";

        return attributes;
    }

    private async Task HandleItemClick(MouseEventArgs args)
    {
        if (!Disabled)
        {
            await Clicked.InvokeIfHasDelegate(args);
        }
    }

}
